Create a CRUD based interface to the database, in order to restrict/guide the use of database. So that missuse and inefficient use of database queries may be minimized.



Create

To be able to persist whole objects, including all available properies.
The dataaccess layer should be able to determine if a (navigation) property needs to be created or updated



What about navigation properties, should it be possible to persis whole object graphs. Maybe restrict the number of levels in the graph.

What about persisting an abject graph with already persisted objects, for example persisting a meeting with a preregistration where the preregistatuib is already persisted
No need to persist, should this be detected by repository the responsibility of the repository is to know if an objects is already persisted, in that case HOW should repository know
- using DTO, 
- key not null
- query the database?

Retrieve and selected navigation properties


Update and navigation properties


General 
How to we integrate with already existing database design and tables
How to assert, using microORM dapper maybe, or SqlHelper



Retrive

- What to be able to explicity tell which properties on an object that should be persisted, including properties of a navigation property


Blogg ------------* Posts
- ID				- ID
- Summary			- Text

Retrive<Blog>(ID, p1 => new { p1.Summary, p2 => new p1.Posts.Text }) // To retrieve the blog in
